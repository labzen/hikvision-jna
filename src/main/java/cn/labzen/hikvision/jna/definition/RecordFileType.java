package cn.labzen.hikvision.jna.definition;

import lombok.AllArgsConstructor;
import lombok.Getter;

import java.util.EnumSet;
import java.util.Optional;

/**
 * 录象文件类型
 */
@Getter
@AllArgsConstructor
public enum RecordFileType implements HikvisionEnum {

  /**
   * 全部
   */
  BY_FF(0xff, "全部"),
  /**
   * 定时录像
   */
  BY_0(0, "定时录像"),
  /**
   * 移动侦测
   */
  BY_1(1, "移动侦测"),
  /**
   * 报警触发
   */
  BY_2(2, "报警触发"),
  /**
   * 报警触发或移动侦测
   */
  BY_3(3, "报警触发或移动侦测"),
  /**
   * 报警触发和移动侦测
   */
  BY_4(4, "报警触发和移动侦测"),
  /**
   * 命令触发
   */
  BY_5(5, "命令触发"),
  /**
   * 手动录像
   */
  BY_6(6, "手动录像"),
  /**
   * 震动报警
   */
  BY_7(7, "震动报警"),
  /**
   * 带有卡号查找：环境报警
   */
  BY_8(8, "环境报警"),
  /**
   * 带有卡号查找：智能报警
   */
  BY_9(9, "智能报警"),
  /**
   * PIR报警
   */
  BY_10(10, "PIR报警"),
  /**
   * 无线报警
   */
  BY_11(11, "无线报警"),
  /**
   * 呼救报警
   */
  BY_12(12, "呼救报警"),
  /**
   * 移动侦测、PIR、无线、呼救等所有报警类型的"或"
   */
  BY_13(13, "移动侦测、PIR、无线、呼救等所有报警类型的\"或\""),
  /**
   * 智能交通事件
   */
  BY_14(14, "智能交通事件"),
  /**
   * 越界侦测
   */
  BY_15(15, "越界侦测"),
  /**
   * 区域入侵侦测
   */
  BY_16(16, "区域入侵侦测"),
  /**
   * 音频异常侦测
   */
  BY_17(17, "音频异常侦测"),
  /**
   * 场景变更侦测
   */
  BY_18(18, "场景变更侦测"),
  /**
   * 智能侦测（越界侦测|区域入侵侦测|进入区域侦测|离开区域侦测|人脸侦测），
   */
  BY_19(19, "智能侦测（越界侦测|区域入侵侦测|进入区域侦测|离开区域侦测|人脸侦测）"),
  /**
   * 人脸侦测
   */
  BY_20(20, "人脸侦测"),
  /**
   * 信号量
   */
  BY_21(21, "信号量"),
  /**
   * 回传
   */
  BY_22(22, "回传"),
  /**
   * 回迁录像
   */
  BY_23(23, "回迁录像"),
  /**
   * 遮挡
   */
  BY_24(24, "遮挡"),
  /**
   * POS录像
   */
  BY_25(25, "POS录像"),
  /**
   * 进入区域侦测
   */
  BY_26(26, "进入区域侦测"),
  /**
   * 离开区域侦测
   */
  BY_27(27, "离开区域侦测"),
  /**
   * 徘徊侦测
   */
  BY_28(28, "徘徊侦测"),
  /**
   * 人员聚集侦测
   */
  BY_29(29, "人员聚集侦测"),
  /**
   * 快速运动侦测
   */
  BY_30(30, "快速运动侦测"),
  /**
   * 停车侦测
   */
  BY_31(31, "停车侦测"),
  /**
   * 物品遗留侦测
   */
  BY_32(32, "物品遗留侦测"),
  /**
   * 物品拿取侦测
   */
  BY_33(33, "物品拿取侦测"),
  /**
   * 火点检测
   */
  BY_34(34, "火点检测"),
  /**
   * 防破坏检测
   */
  BY_35(35, "防破坏检测"),
  /**
   * 船只检测
   */
  BY_36(36, "船只检测"),
  /**
   * 测温预警
   */
  BY_37(37, "测温预警"),
  /**
   * 测温报警
   */
  BY_38(38, "测温报警"),
  /**
   * 打架斗殴报警
   */
  BY_39(39, "打架斗殴报警"),
  /**
   * 起身检测
   */
  BY_40(40, "起身检测"),
  /**
   * 瞌睡检测
   */
  BY_41(41, "瞌睡检测"),
  /**
   * 温差报警
   */
  BY_42(42, "温差报警"),
  /**
   * 离线测温报警
   */
  BY_43(43, "离线测温报警"),
  /**
   * 防区报警
   */
  BY_44(44, "防区报警"),
  /**
   * 紧急求助
   */
  BY_45(45, "紧急求助"),
  /**
   * 业务咨询
   */
  BY_46(46, "业务咨询"),
  /**
   * 起身检测
   */
  BY_47(47, "起身检测"),
  /**
   * 折线攀高
   */
  BY_48(48, "折线攀高"),
  /**
   * 如厕超时
   */
  BY_49(49, "如厕超时");

  private int code;
  private String description;

  public static Optional<RecordFileType> byCode(int code) {
    return EnumSet.allOf(RecordFileType.class).stream().filter(in -> in.code == code).findFirst();
  }
}
